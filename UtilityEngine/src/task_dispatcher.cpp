/**
* @file task_dispatcher.cpp
*
* @author Hourui (liquidmonkey)
*/

#include "task_dispatcher.hpp"
#include "msg_controler.hpp"

namespace Utility
{
////////////////////////////////////////////////////////////////////////////////////////////////////
namespace task
{
////////////////////////////////////////////////////////////////////////////////////////////////////
void dispatcher::task_info::run(void)
{
	m_controler->handle_wrap(m_obj, m_message, m_userdata, m_good);
}
////////////////////////////////////////////////////////////////////////////////////////////////////
dispatcher::dispatcher(void)
{}
////////////////////////////////////////////////////////////////////////////////////////////////////
dispatcher::~dispatcher(void)
{
	stop();
}
////////////////////////////////////////////////////////////////////////////////////////////////////
void
dispatcher::stop(void)
{
	m_workers.safe_stop();
}
////////////////////////////////////////////////////////////////////////////////////////////////////
void
dispatcher::start(std::uint32_t nworker)
{
	assert(nworker > 0);
	m_workers.init(nworker);
}
////////////////////////////////////////////////////////////////////////////////////////////////////
void
dispatcher::dispatch(task_info&& _task)
{
	m_workers.schedule(std::move(_task));
}
////////////////////////////////////////////////////////////////////////////////////////////////////
}//namespace task
////////////////////////////////////////////////////////////////////////////////////////////////////
}//namespace Utility 